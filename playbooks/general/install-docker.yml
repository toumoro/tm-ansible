
- name: Install Docker in Debians and Ubuntu systems
  import_tasks: docker/install-docker-debian.yml
  when: ansible_os_family == "Debian"

- name: Install Docker in RedHat likes systems
  import_tasks: docker/install-docker-redhat.yml
  when: ansible_distribution != "Amazon" and ansible_os_family == "RedHat"

- name: Install Docker in Amazon like systems
  import_tasks: docker/install-docker-amazon.yml
  when: ansible_distribution == "Amazon"

- name: Configure Crontab Docker
  import_tasks: docker/crontab.yml

- name: Configure Docker log rotation
  ansible.builtin.copy:
    dest: /etc/docker/daemon.json
    content: |
      {
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "50m",
          "max-file": "3"
        }
      }
    owner: root
    group: root
    mode: '0644'

- name: Create Docker systemd override directory
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
    mode: '0755'
  when: proxy_url is defined and proxy_url != ""

- name: Configure Docker proxy
  copy:
    dest: /etc/systemd/system/docker.service.d/http-proxy.conf
    content: |
      [Service]
      Environment="HTTP_PROXY=http://{{ proxy_url }}" 
      Environment="HTTPS_PROXY=http://{{ proxy_url }}"
    mode: '0644'
  when: proxy_url is defined and proxy_url != ""

- name: Start and enable Docker service
  systemd:
    name: docker.service
    enabled: yes
    state: started
  ignore_errors: true

- name: Start and enable Containerd service
  systemd:
    name: containerd.service
    enabled: yes
    state: started
  ignore_errors: true

- name: Add current user to docker group in Amazon systems
  user:
    name: ec2-user
    groups: docker
    append: yes
  when: ansible_distribution == "Amazon"
  
- name: Add current user to docker group in non-Amazon systems
  user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: yes
  when: ansible_distribution != "Amazon"

- name: Download Docker Compose binary
  get_url:
    url: https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: '0755'

- name: Verify Docker Compose installation
  command: docker-compose --version       # Commande introuvble sans l'ajout du chemin dans le PATH de Ansible
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  register: docker_compose_version

- name: Show Docker Compose version
  debug:
    var: docker_compose_version.stdout